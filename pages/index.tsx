import type { NextPage } from "next";
import Head from "next/head";
import { useState, useEffect } from "react";
import axios from "axios";
import useSwr from "swr";
import { leaguesResponseType } from "../types";
import { summonersFetcher } from "./apiHelpers";

const Home: NextPage = () => {
  const [challengerData, setChallengerData] = useState<leaguesResponseType>([]);
  //const { data, error } = useSwr("/api/getSummoners", summonersFetcher);
  useEffect(() => {
    axios
      .get("/api/getSummoners")
      .then((res) => res.data)
      .then((data) => data.entries)
      .then((arr: leaguesResponseType) =>
        setChallengerData(
          arr.sort((first, second) => second.leaguePoints - first.leaguePoints)
        )
      )
      .catch((err) => console.error(err));
  }, []);
  console.log(challengerData.length);
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {challengerData.map((player) => (
        <p key={player.summonerId}>
          ign:{player.summonerName} LP:{player.leaguePoints} winrate:{" "}
          {(player.wins / (player.losses + player.wins)) * 100}% wins:{" "}
          {player.wins} losses:{player.losses}
        </p>
      ))}
      <main></main>
    </div>
  );
};

export default Home;

/**



*/
